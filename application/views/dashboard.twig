
{% extends 'main-layout.twig' %}
{% block pagetitle %}داشبورد{% endblock %}

{% block content %}
	 <!-- محتوای صفحه -->
            <div id="dashboard-view" class="p-6">
                <!-- کارت‌های خلاصه وضعیت -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                    <div class="bg-white p-6 rounded-lg shadow-sm border-t-4 border-green-500">
                        <div class="flex justify-between items-start">
                            <div>
                                <p class="text-gray-500">کل درآمد</p>
                                <p class="text-2xl font-bold mt-2" v-html="toPersianNumber(numberWithCommas(income))+' تومان'"></p>
                            </div>
                            <div class="bg-green-100 p-3 rounded-full">
                                <i class="fas fa-arrow-up text-green-500"></i>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-6 rounded-lg shadow-sm border-t-4 border-red-500">
                        <div class="flex justify-between items-start">
                            <div>
                                <p class="text-gray-500">کل هزینه</p>
                                <p class="text-2xl font-bold mt-2" v-html="toPersianNumber(numberWithCommas(expense))+' تومان'"></p>
                            </div>
                            <div class="bg-red-100 p-3 rounded-full">
                                <i class="fas fa-arrow-down text-red-500"></i>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-6 rounded-lg shadow-sm border-t-4 border-indigo-500">
                        <div class="flex justify-between items-start">
                            <div>
                                <p class="text-gray-500">موجودی</p>
                                <p class="text-2xl font-bold mt-2" :class="{'text-red-500':remain < 0,'text-green-500':remain >= 0}" v-html="toPersianNumber(numberWithCommas(remain))+' تومان'"></p>
                            </div>
                            <div class="bg-indigo-100 p-3 rounded-full">
                                <i class="fas fa-wallet text-indigo-500"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- نمودار و تراکنش‌های اخیر -->
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    <div class="lg:col-span-2 bg-white p-6 rounded-lg shadow-sm">
                        <div class="flex justify-between items-center mb-4">
                            <h3 class="font-semibold text-gray-800">روند درآمد و هزینه</h3>
                            
                        </div>
                        <div class="h-96 bg-gray-100 rounded-lg flex items-center justify-center">
                            <canvas id="chart-container" style="width:100%;max-width:600px;height:100%"></canvas>
                        </div>
                    </div>


                    <div class="bg-white p-6 rounded-lg shadow-sm">
                        <div class="flex justify-between items-center mb-4">
                            <h3 class="font-semibold text-gray-800">تراکنش‌های اخیر</h3>
                            <a href="{{base_url('/Transactions/index')}}" class="text-sm text-indigo-600">مشاهده همه</a>
                        </div>
                        <div class="space-y-4">
                            
                                <div v-for="transaction in lastTransactions" class="flex justify-between items-center p-3 hover:bg-gray-50 rounded-lg">
                                    <div class="flex items-center">
                                        <div class="bg-indigo-100 p-2 rounded-full">
                                            <i class="fas fa-money-bill-wave text-green-500"></i>
                                        </div>
                                        <div class="mr-3">
                                            <p class="font-medium" v-html="transaction.title"></p>
                                            <p class="text-xs text-gray-500" v-html="transaction.type == 'income'? 'نوع: درآمد' : 'نوع: هزینه'"></p>
                                        </div>
                                        
                                    </div>
                                    <p :class="{'text-green-500':transaction.type == 'income','text-red-500':transaction.type != 'income'}" class="font-medium" v-html="(transaction.type == 'income'? '+' : '-')+toPersianNumber(numberWithCommas(transaction.amount))+' تومان'"></p>
                                </div>
                        </div>
                    </div>
                </div>

                <!-- فرم افزودن تراکنش جدید -->
                <div class="mt-6 bg-white p-6 rounded-lg shadow-sm">
                    <h3 class="font-semibold text-gray-800 mb-4">افزودن تراکنش جدید</h3>
                    <form class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4" @submit.prevent="addTransaction">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">عنوان</label>
                            <input v-model="title" name="title" type="text" class="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-200">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">مبلغ (تومان)</label>
                            <input v-model="amount" name="amount" type="number" class="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-200">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">نوع</label>
                            <select v-model="type" name="type" class="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-200">
                                <option value="income">درآمد</option>
                                <option value="expense">هزینه</option>
                            </select>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">دسته‌بندی</label>
                            <select v-model="categoryId" name="category_id" class="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-200">
                                <option selected disabled>انتخاب کنید</option>
                                <option v-for="category in categories" :value="category.id" v-html="category.title"></option>
                            </select>
                        </div>
                        <div class="flex items-end">
                            <button type="submit" class="w-full bg-indigo-600 text-white py-2 px-4 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500">
                                ثبت تراکنش
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
            <script>
            function successAlert(messageText){
	            Swal.fire({title: "عملیات موفق",
	            text:messageText,
	            icon: "success",
	            confirmButtonText: 'تائید'});
            }
            function failAlert(messageText){
                Swal.fire({title: "خطا",
                html: messageText,
                icon: "error",
                confirmButtonText: 'تائید'});

	        }
                const dashboardView = Vue.createApp({
                    data(){
                        return{
                            income: 0,
                            expense: 0,
                            remain: 0,
                            lastTransactions : [],
                            //// add new transaction ////
                            title : null,
                            amount : null,
                            type : null,
                            categoryId : null,
                            categories : [],
                            //// Chart Data ////
                            dates : [],
                            incomes : [],
                            expenses : []
                        }
                    },
                    mounted(){
                        this.getData();
                    },
                    methods:{
                        toPersianNumber(enNumber) {
                            if (enNumber === null || enNumber === undefined) return '';

                            const numStr = String(enNumber);

                            const persianDigits = '۰۱۲۳۴۵۶۷۸۹';

                            return numStr.replace(/\d/g, function(match) {
                              return persianDigits[parseInt(match)];
                            });
                        },
                        numberWithCommas(x) {
                            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        },
                        getData(){
                            const vm = this;
                            $.ajax({
                                url: '{{base_url()}}Dashboard/getData',
                                method: 'GET',
                                dataType: 'json',
                                success: function(response) {
                                  if (response.status === 'success') {
                                    vm.categories = response.data.categories;
                                    vm.income = response.data.income;
                                    vm.expense = response.data.expense;
                                    vm.remain = response.data.remain;
                                    vm.lastTransactions = response.data.transactions;
                                    //// chart ////
                                    vm.dates = response.data.dates;
                                    vm.incomes = response.data.allIncomes;
                                    vm.expenses = response.data.allExpenses;
                                    vm.showChart();
                                  } else {
                                    console.error('Failed :', response.message);
                                  }
                                }
                            });
                        },
                        addTransaction(){
                            const vm=this;
                            $.ajax({
                                url: "{{base_url('/Transactions/insert_transaction')}}",
                                method: 'POST',
                                dataType: 'json',
                                data : {
                                    'title':vm.title,
                                    'amount':vm.amount,
                                    'type':vm.type,
                                    'category_id':vm.categoryId
                                },
                                success: function(response) {
                                  if (response.status === 'success') {
                                    vm.title=vm.amount=vm.type=vm.categoryId=null;
                                    vm.getData();
                                    successAlert(response.message);
                                  } else {
                                    console.error('Failed :', response.message);
                                    failAlert(response.message);
                                  }
                                }
                            });
                        },
                        showChart(){
                            const vm = this;
                            new Chart("chart-container", {
                                type: "line",
                                data: {
                                  labels: vm.dates,
                                  datasets: [{
                                    data: vm.incomes,
                                    borderColor: "blue",
                                    fill: false
                                  },{
                                    data: vm.expenses,
                                    borderColor: "red",
                                    fill: false
                                  }]
                                },
                                options: {
                                  legend: {display: false}
                                }
                            });
                        }
                    }
                }).mount("#dashboard-view");
            </script>
{% endblock %}
