{% extends "main-layout.twig" %}

{% block pagetitle %}مدیریت تراکنش‌ها
{% endblock %}

{% block content %}
<div id="transaction-page" class="p-6">
	<div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6 gap-4">
		<h3 class="text-lg font-semibold text-gray-800">تراکنش‌های مالی شما</h3>

		<div class="flex flex-wrap gap-3 items-center w-full md:w-auto">
			<!-- Add Transaction Button -->
			<button id="addTransactionBtn" @click="showInsertModal"
				class="bg-indigo-600 text-white mx-6 py-2 px-4 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 flex items-center justify-center">
				<i class="fas fa-plus ml-1"></i>
				تراکنش جدید
			</button>

			<!-- Form (now horizontal) -->
			<form @submit.prevent="getData(1)" class="flex flex-wrap gap-2 items-center">
				<!-- Category Dropdown -->
				<select v-model="categoryId" name="category_id" id="categoryFilter"
					class="border rounded-lg px-4 py-2 pr-8 focus:outline-none focus:ring-2 focus:ring-indigo-200">
					<option selected disabled value='0'>انتخاب کنید</option>
					
					<option v-for="category in categories" :value="category.id" v-html="category.title"></option>
					
				</select>

				<!-- Type Dropdown -->
				<select name="type" id="typeFilter" v-model="type"
					class="border rounded-lg px-4 py-2 pr-8 focus:outline-none focus:ring-2 focus:ring-indigo-200">
					<option selected disabled :value='null'>انتخاب کنید</option>
					<option value="income">درآمد</option>
					<option value="expense">هزینه</option>
				</select>

				<!-- Search Button -->
				<button type="submit"
					class="bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 flex items-center justify-center">
					<i class="fa-solid fa-magnifying-glass"></i>
					جستجو
				</button>

				<!-- Reset Link -->
				<button @click="resetAndFetch"
					class="cursor-pointer bg-orange-600 text-white py-2 px-4 rounded-lg hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 flex items-center justify-center">
					<i class="fa-solid fa-arrows-rotate"></i>
					نمایش همه
				</button>
			</form>
		</div>
	</div>

	<!-- کارت‌های خلاصه آماری -->
	<div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
		<div class="bg-white p-6 rounded-lg shadow-sm border-t-4 border-green-500">
			<div class="flex justify-between items-start">
				<div>
					<p class="text-gray-500">کل درآمدها</p>
					<p class="text-2xl font-bold mt-2" v-html="toPersianNumber(numberWithCommas(income))+' تومان'"></p>
				</div>
				<div class="bg-green-100 p-3 rounded-full">
					<i class="fas fa-arrow-up text-green-500"></i>
				</div>
			</div>
		</div>

		<div class="bg-white p-6 rounded-lg shadow-sm border-t-4 border-red-500">
			<div class="flex justify-between items-start">
				<div>
					<p class="text-gray-500">کل هزینه‌ها</p>
					<p class="text-2xl font-bold mt-2" v-html="toPersianNumber(numberWithCommas(expense))+' تومان'"></p>
				</div>
				<div class="bg-red-100 p-3 rounded-full">
					<i class="fas fa-arrow-down text-red-500"></i>
				</div>
			</div>
		</div>

		<div class="bg-white p-6 rounded-lg shadow-sm border-t-4 border-indigo-500">
			<div class="flex justify-between items-start">
				<div>
					<p class="text-gray-500">تعداد کل تراکنش ها</p>
					<p class="text-2xl font-bold mt-2" v-html="toPersianNumber(totalRecords)+' تراکنش'"></p>
				</div>
				<div class="bg-indigo-100 p-3 rounded-full">
					<i class="fas fa-exchange-alt text-indigo-500"></i>
				</div>
			</div>
		</div>
	</div>

	<!-- جدول تراکنش‌ها -->
	<div class="bg-white rounded-lg shadow-sm overflow-hidden">
		<div class="overflow-x-auto">
			<table class="min-w-full divide-y divide-gray-200">
				<thead class="bg-gray-50">
					<tr>
						<th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
							عنوان</th>
						<th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">مبلغ
						</th>
						<th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
							دسته‌بندی</th>
						<th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">نوع
						</th>
						<th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
							تاریخ</th>
						<th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
							عملیات</th>
					</tr>
				</thead>
				<tbody class="bg-white divide-y divide-gray-200">
					<!-- تراکنش   -->
					{# {% for transaction in transactions %} #}
					<tr v-for="transaction in transactions" data-transaction-id="{{transaction.id}}">
						<td class="px-6 py-4 whitespace-nowrap">
							<div class="text-sm font-medium text-gray-900" v-html="transaction.title"></div>
						</td>
						<td class="px-6 py-4 whitespace-nowrap">
							<div class="text-sm text-red-600 font-medium" v-html="toPersianNumber(numberWithCommas(transaction.amount))"></div>
						</td>
						<td class="px-6 py-4 whitespace-nowrap">
							<div class="text-sm text-gray-900" v-html="transaction.category_title"></div>
						</td>
						<td class="px-6 py-4 whitespace-nowrap">
							<span v-html="transaction.type == 'income' ? 'درآمد' : 'هزینه'"
								class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
							</span>
						</td>
						<td class="px-6 py-4 whitespace-nowrap">
							<div class="text-sm text-gray-500" v-html="toPersianNumber(transaction.created_at)"></div>
						</td>
						<td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
							<button class="edit-btn text-indigo-600 hover:text-indigo-900 mr-3"
								@click="showUpdateModal(transaction.id)">
								<i class="fas fa-edit"></i>
							</button>
							<button @click="deleteTransaction(transaction.id)"
								class="delete-transaction-btn text-red-600 hover:text-red-900">
								<i class="fas fa-trash"></i>
							</button>
						</td>
					</tr>
					{# {% endfor %} #}
				</tbody>
			</table>
		</div>

		<!-- صفحه‌بندی -->
		<div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
			<div class="flex-1 flex justify-between sm:hidden">
				<a href="#"
					class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
					قبلی
				</a>
				<a href="#"
					class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
					بعدی
				</a>
			</div>
			<div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
				<div>
					<p class="text-sm text-gray-700">
						نمایش
						<span class="font-medium" v-html="offset+1"></span>
						تا
						<span class="font-medium" v-html="offset + currentRecords"></span>
						از
						<span class="font-medium" v-html="totalRecords"></span>
						نتیجه
					</p>
				</div>
				<div>
					<nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
						<button @click="navigatePages(-1)"
							class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
							<span class="sr-only">قبلی</span>
							<i class="fas fa-chevron-right"></i>
						</button>

						<button @click="goToPage(1)" class="bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium">ابتدا
						</button>
						
						<button v-for="page in pages" @click="goToPage(page)" :class="{'z-10 bg-indigo-50 border-indigo-500 text-indigo-600 relative inline-flex items-center px-4 py-2 border text-sm font-medium' : page==currentPage, 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium'  : page!=currentPage}" v-html="toPersianNumber(page)">
						</button>

						<button @click="goToPage(lastPage)" class="bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium">انتها
						</button>
						
						<button @click="navigatePages(1)"
							class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
							<span class="sr-only">بعدی</span>
							<i class="fas fa-chevron-left"></i>
						</button>
					</nav>
				</div>
			</div>
		</div>
	</div>

	<!-- مودال تراکنش -->
	<div v-if="showModal" id="transactionModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full">
		<div class="relative top-20 mx-auto p-5 border w-full max-w-md shadow-lg rounded-md bg-white">
			<div class="flex justify-between items-center mb-4">
				<h3 class="text-lg font-medium" id="modalTitle" v-html="modalTitle"></h3>
				<button class="close-modal text-gray-400 hover:text-gray-500" @click="showModal=false">
					<i class="fas fa-times"></i>
				</button>
			</div>

			<form @submit.prevent="insertTransaction" id="transactionForm" method="POST">
				<input type="hidden" id="transactionId" name="transaction_id" :value="transactionId">
				<div class="grid grid-cols-1 gap-4 mb-4">
					<div>
						<label for="transactionTitle" class="block text-sm font-medium text-gray-700 mb-1">عنوان
							تراکنش</label>
						<input type="text" id="transactionTitle" name="title" v-model="transactionTitle"
							class="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-200">
					</div>

					<div>
						<label for="transactionAmount" class="block text-sm font-medium text-gray-700 mb-1">مبلغ
							(تومان)</label>
						<input type="number" id="transactionAmount" name="amount" v-model="transactionAmount"
							class="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-200">
					</div>

					<div class="grid grid-cols-2 gap-4">
						<div>
							<label for="transactionType" class="block text-sm font-medium text-gray-700 mb-1">نوع
								تراکنش</label>
							<select id="transactionType" name="type" v-model="transactionType"
								class="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-200">
								<option value="income">درآمد</option>
								<option value="expense">هزینه</option>
							</select>
						</div>

						<div>
							<label for="transactionCategory"
								class="block text-sm font-medium text-gray-700 mb-1">دسته‌بندی</label>
							<select v-model="transactionCategory" id="transactionCategory" name="category_id"
								class="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-200">
								<option selected disabled value="">انتخاب کنید</option>
								
								<option v-for="category in categories" :value="category.id" v-html="category.title"></option>
								
							</select>
						</div>
					</div>
				</div>

				<div class="flex justify-end space-x-3">
					<button type="button"  @click="showModal=false"
						class="close-modal mx-2 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50">
						انصراف
					</button>
					<button type="submit" class="px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700">
						<span id="submitBtnText" v-html="submitBtnText"></span>
					</button>
				</div>
			</form>
		</div>
	</div>
</div>

<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>

<!-- jQuery و اسکریپت‌های مربوطه -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
	function successAlert(messageText){
	        Swal.fire({title: "عملیات موفق",
	        text:messageText,
	        icon: "success",
	        confirmButtonText: 'تائید'});
        }
    function failAlert(messageText){
            Swal.fire({title: "خطا",
            html: messageText,
            icon: "error",
            confirmButtonText: 'تائید'});
	    }
	Vue.createApp({
		data(){
			return{
				transactions : [],
				categories : [],
				totalRecords : 0,
				income : 0,
				expense:0,
				categoryId : 0,
				type:null,
				////////Modal///////
				showModal:false,
				modalTitle : 'تراکنش جدید',
				submitBtnText : 'ثبت تراکنش',
				transactionId : null,
				transactionTitle : null,
				transactionAmount : null,
				transactionCategory : null,
				transactionType : null,
				////////Pagination////////
				currentRecords : 0,
				page : 1,
				pages : [],
				lastPage: 1,
    			currentPage: 1,
    			totalRecords: 10,
    			offset: 0,
			}
		},
        mounted(){
            this.getData(this.page);
        },
        methods:{
            toPersianNumber(enNumber) {
                if (enNumber === null || enNumber === undefined) return '';
                const numStr = String(enNumber);
                const persianDigits = '۰۱۲۳۴۵۶۷۸۹';
                return numStr.replace(/\d/g, function(match) {
                return persianDigits[parseInt(match)];
                });
            },
            numberWithCommas(x) {
                return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            },
			getData(page){
				console.log("hi");
				const vm = this;
                $.ajax({
                    url: '{{base_url()}}Transactions/getData',
                    method: 'GET',
                    dataType: 'json',
					data: {
						'page' : page,
						'category_id':vm.categoryId,
						'type':vm.type
					},
                    success: function(response) {
                      if (response.status === 'success') {
                        vm.categories = response.data.categories;
						vm.transactions = response.data.transactions;
						vm.totalRecords = response.data.totalRecords;
						vm.income = response.data.income;
						vm.expense = response.data.expense;
						vm.currentRecords = response.data.currentRecords,
						vm.pages = response.data.pages,
						vm.lastPage = response.data.lastPage,
    					vm.currentPage = response.data.currentPage,
    					vm.offset = response.data.offset
                      } else {
                        console.error('Failed :', response.message);
                      }
                    }
                });
			},
			resetAndFetch(){
				this.categoryId = 0;
    			this.type = null;
    			this.getData(1);
			},
			deleteTransaction(id){
				const vm = this;
				Swal.fire({
                    title: "آیا مطمئنید؟",
                    text: "آیا می خواهید تراکنش مورد نظر حذف شود؟",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "بله، حذف کن!",
                    cancelButtonText: "خیر",
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                    	url: `{{base_url('/Transactions/delete_transaction')}}/${id}`,
                    	method: 'POST',
                    	dataType: 'json',
                    	success: function(response) {
                    	  if (response.status === 'success') {
							vm.getData(this.page);
                    	    successAlert(response.message);
                    	  } else {
                    	    console.error('Failed :', response.message);
                    	  }
                    	}
                });
                    }
                });
			},
			showInsertModal(){
				this.showModal = true;
				this.modalTitle = 'تراکنش جدید';
				this.submitBtnText = 'ثبت تراکنش';
				this.transactionId = this.transactionTitle = this.transactionAmount = null;
				this.transactionCategory = '';
				this.transactionType = 'income';
			},
			showUpdateModal(id){
				this.showModal = true;
				this.modalTitle = 'ویرایش تراکنش';
				this.submitBtnText = 'ذخیره تغییرات';
				const vm = this;
                $.ajax({
                    url: '{{base_url()}}Transactions/getTransaction',
                    method: 'GET',
                    dataType: 'json',
					data : {
						'id': id
					},
                    success: function(response) {
                      if (response.status === 'success') {
                        vm.transactionId = id;
						vm.transactionTitle = response.data.title;
						vm.transactionAmount = response.data.amount;
						vm.transactionCategory = response.data.category_id;
						vm.transactionType = response.data.type;
                      } else {
                        console.error('Failed :', response.message);
                      }
                    }
                });
			},
			insertTransaction(){
				const vm = this;
                $.ajax({
                    url: "{{base_url('/Transactions/insert_transaction')}}",
                    method: 'post',
                    dataType: 'json',
					data : {
						'transaction_id' : vm.transactionId,
						'title':vm.transactionTitle,
                        'amount':vm.transactionAmount,
                        'type':vm.transactionType,
                        'category_id':vm.transactionCategory
					},
                    success: function(response) {
                      if (response.status === 'success') {
                        successAlert(response.message);
						vm.showModal = false;
						vm.getData(this.page);
                      } else {
						failAlert(response.message);
                      }
                    }
                });
			},
			navigatePages(navigate) {
				newPage = this.page + navigate;
				if (newPage >= 1 && newPage <= this.lastPage) {
					this.page=newPage;
					this.getData(this.page);
				}
			},
			goToPage(page) {
				this.page = page;
				this.getData(page);
			}
		}
	}).mount("#transaction-page");
</script>
{% endblock %}